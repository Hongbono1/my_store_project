
[프로젝트 개요]
- 프로젝트명: Mall Hankook (로컬 상권 홍보 및 상점 등록 플랫폼)
- 백엔드: Node.js (Express) + PostgreSQL (Neon DB)
- 배포: Cloudtype / Naver Cloud / Domain: www.hongbono1.com
- 현재 서버 구조: server.js → routes → controllers → db.js

[라우터 구조]
1. /store → routes/foodregister.js → controllers/foodregisterController.js
2. /combined → routes/ncombinedregister.js
3. /api/subcategory → routes/subcategory.js
4. /api/hotblog → routes/hotblogregister.js
5. /owner → routes/owner.js

[주요 테이블]
- store_info: 가게 정보 (business_name, address, phone, business_hours, facilities 등)
- store_menu: 메뉴 정보 (store_id, name, price, category, image_url, description, theme)
- store_images: 가게 이미지 (store_id, url, sort_order)
- store_events: 이벤트 (store_id, content, ord)

[프론트엔드 구조]
- /public2/register.html → 상점 등록 페이지 (사업자 인증, 이미지 업로드, Kakao 지도, FormData 전송)
- /public/detail.html → 상세 페이지 (store/:id/full API로 데이터 표시)
- /public/components/header.html, footer.html → fetch로 동적 삽입
- Tailwind CSS 기반 + Neomorphism + Glassmorphism + 3D 스타일 적용

[주요 동작]
- register.html → multer를 통해 이미지 업로드 후 DB에 저장
- detail.html → /store/:id/full fetch → store_info, store_menu, store_images 출력
- 즐겨찾기 버튼, 장바구니 기능 포함
- Kakao 지도는 address를 기준으로 표시

[서버 설정]
- /uploads 정적 서빙
- /verify-biz → 국세청 사업자등록 API 프록시 (odcloud)
- 에러 및 404 전역 핸들러 구현됨
- 라우트 확인용 /__routes, 헬스체크용 /__ping

[현재 이슈]
- detail.html이 store/:id/full 데이터를 못 불러올 때 있음 (404)
- 원인: 컨트롤러에서 컬럼명(store_info vs food_stores) 불일치 가능성
- foodregisterController.js의 getFoodStoreFull()에서 사용되는 테이블명 점검 필요

[작업 계획]
1. detail.html의 fetch 경로 확인 (/store/:id/full)
2. foodregisterController.js → getFoodStoreFull에서 DB 필드명 일치 확인
3. 필요 시 store_info / store_menu / store_images 구조 통합
4. VSCode ChatGPT 확장 연결 후 자동 수정 지원 준비

[요약]
이 프로젝트는 “레지스터 페이지에서 상점 정보 입력 → 서버 저장 → 디테일 페이지에서 표시” 구조로,  
라우터·컨트롤러·DB의 필드명이 일관되게 맞춰져야 한다.  
VSCode 내 ChatGPT는 이 맥락을 이해하고 코드 수정 또는 점검을 수행해야 한다.
